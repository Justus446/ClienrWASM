@page "/prodinfoList"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.EntityFrameworkCore
@using ClienrWASM.Shared
@using Pages
@attribute [Authorize]

@inject HttpClient Http

<h3>ProdInfoList</h3>
<RadzenDataGrid @ref="prodInfoGrid" AllowFiltering="true" AllowPaging="true" PageSize="6" AllowSorting="true" EditMode="DataGridEditMode.Multiple "
                Data="@prodinfo" TItem="ProdInfo" RowUpdate="@OnUpdateRow" >
    <Columns>
        <RadzenDataGridColumn Width="100px" TItem="ProdInfo" Property="ProductID" Title="ID" />
        <RadzenDataGridColumn Width="200px" TItem="ProdInfo" Property="ProdInfo.Description" Title="Product">
            @*<EditTemplate Context="ProdInfo">
                <RadzenDropDown @bind-Value="ProdInfo.ProductID" Data="@prodinfo" TextProperty="ProductID" ValueProperty="ProductID" Style="width:100%" />
            </EditTemplate>*@
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Width="300px" TItem="ProdInfo" Property="ProdInfo.SKU" Title="Product">
            <EditTemplate Context="ProdInfo">
                <RadzenTextBox @bind-Value="ProdInfo.SKU" Data="@prodinfo" TextProperty="SKU" ValueProperty="SKU" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Width="100px" TItem="ProdInfo" Property="Location" Title="Location">
            <EditTemplate Context="order">
                <RadzenTextBox @bind-Value="order.Location" Style="width:100%; display: block" Name="Location" />
                <RadzenRequiredValidator Text="Location is required" Component="Location" Popup="true" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn Width="100px" TItem="ProdInfo" Property="StockCount" Title="StockCount">
            <Template Context="order">
                @String.Format("{0:n2}", order.InStock)
            </Template>
            <EditTemplate Context="order">
                <RadzenNumeric TValue="decimal" @bind-Value="order.InStock" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>
        @*<RadzenDataGridColumn TItem="ProdInfo" Property="Freight" Title="Freight">
            <Template Context="order">
                @String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", order.Freight)
            </Template>
            <EditTemplate Context="order">
                <RadzenNumeric @bind-Value="order.Freight" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>*@

        <RadzenDataGridColumn TItem="ProdInfo" Context="sampleBlazorModelsSampleOrder" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="100px">
            <Template Context="order">
                <RadzenButton Icon="edit" Size="ButtonSize.Small" Click="@(args => EditRow(order))" @onclick:stopPropagation="true">
                </RadzenButton>
            </Template>
            <EditTemplate Context="order">
                <RadzenButton Icon="save" Size="ButtonSize.Small" Click="@((args) => SaveRow(order))">
                </RadzenButton>
                <RadzenButton Icon="cancel" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Secondary" Click="@((args) => CancelEdit(order))">
                </RadzenButton>
            </EditTemplate>
        </RadzenDataGridColumn>
        @*<RadzenDataGridColumn TItem="ProdInfo" Context="order" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="70px">
            <Template Context="order">
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small" Click="@(args => DeleteRow(order))" @onclick:stopPropagation="true">
                </RadzenButton>
            </Template>
            <EditTemplate Context="order">
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small" Click="@(args => DeleteRow(order))">
                </RadzenButton>
            </EditTemplate>
        </RadzenDataGridColumn>*@
    </Columns>
</RadzenDataGrid>

@code {
    RadzenDataGrid<ProdInfo> prodInfoGrid;
    IList<ProdInfo> prodinfo;
    IList<ProdInfo> Updatedprodinfo;

     //string url API end point: GET PRODUCTS
    string getprodInfoUrl = "https://localhost:5001/api/ProdInfo";

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    protected async Task LoadData()
    {
        prodinfo = await Http.GetFromJsonAsync<IList<ProdInfo>>(getprodInfoUrl);
    }


    void EditRow(ProdInfo prodinfo)
    {
        prodInfoGrid.EditRow(prodinfo);
    }


    void SaveRow(ProdInfo prodinfo)
    { //after update has been done
        prodInfoGrid.UpdateRow(prodinfo);
        Updatedprodinfo.Add(prodinfo);
    }

    void CancelEdit(ProdInfo prodinfo)
    {

        prodInfoGrid.CancelEditRow(prodinfo);


    }

    //on click this will add each updated row to a list
    void OnUpdateRow(ProdInfo prodinfo)
    {
        Updatedprodinfo.Add(prodinfo);
    }

    //on click this returns all the updated rows
    private  void UpdatedRows(MouseEventArgs e)
    {
        //return Updatedprodinfo;
    }




}
